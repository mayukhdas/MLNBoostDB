/**
  * javacc parser for the BK file
  *
  * @author Marcin Malec
  * 
  * Last Modified: November 4, 2015
  */

options {
  JAVA_UNICODE_ESCAPE = true;
  STATIC = false;
}

PARSER_BEGIN(Facts_Parser)
package edu.soic.Parse.Facts;

import edu.soic.Learning.Boosting.LearningProblem;
import java.util.ArrayList;
import edu.soic.FOL.Predicate;

public class Facts_Parser {
	LearningProblem lp;
}

PARSER_END(Facts_Parser)
SKIP :
{
	  " "
	| "\t"
	| "\n"
	| "\r"
    | < "//" (~["\r", "\n"])* >
	| < "/*" (~["*"])* "*" ("*" | (~["*","/"] (~["*"])* "*"))* "/" >
}

TOKEN :
{
  < INT: ["1"-"9"] (["0"-"9"])* >
|   < ID: ["a"-"z","A"-"Z"] (["a"-"z","A"-"Z","0"-"9","_"])* >

}

void factFile(LearningProblem lp) :
{}
{
  	{this.lp = lp;}
  	(fact())+
  	<EOF>
}

void fact():
{	Token tp;
	Token ta;
	int i = 0;
	String[] args;
}
{
  	tp = <ID>
  	{
		Predicate p = lp.getPred(tp.image);
		args = new String[p.getArity()];
  	}	"(" ta = <ID>	{args[i++] = ta.image;}
	("," ta = <ID>
	{args[i++] = ta.image;})*
	 ")."
	{lp.addEvidence(tp.image, args);}
}
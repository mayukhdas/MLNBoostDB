% Running on host: Beast

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[Datasets\IMDB\train1/train1_pos.txt, Datasets\IMDB\train1/train1_neg.txt, Datasets\IMDB\train1/train1_bk.txt, Datasets\IMDB\train1/train1_facts.txt]
%  for N=0: args[N]=Datasets\IMDB\train1/train1_pos.txt

% getInputArgWithDefaultValue: args=[Datasets\IMDB\train1/train1_pos.txt, Datasets\IMDB\train1/train1_neg.txt, Datasets\IMDB\train1/train1_bk.txt, Datasets\IMDB\train1/train1_facts.txt]
%  for N=1: args[N]=Datasets\IMDB\train1/train1_neg.txt

% getInputArgWithDefaultValue: args=[Datasets\IMDB\train1/train1_pos.txt, Datasets\IMDB\train1/train1_neg.txt, Datasets\IMDB\train1/train1_bk.txt, Datasets\IMDB\train1/train1_facts.txt]
%  for N=2: args[N]=Datasets\IMDB\train1/train1_bk.txt

% getInputArgWithDefaultValue: args=[Datasets\IMDB\train1/train1_pos.txt, Datasets\IMDB\train1/train1_neg.txt, Datasets\IMDB\train1/train1_bk.txt, Datasets\IMDB\train1/train1_facts.txt]
%  for N=3: args[N]=Datasets\IMDB\train1/train1_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../WILL_BK_IMDB.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 834 facts.
% Have read 0 examples from 'Datasets\IMDB\train1' [Datasets\IMDB\train1/train1*].
% Have read 0 examples from 'Datasets\IMDB\train1' [Datasets\IMDB\train1/train1*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.

***** Warning: targetPredicates=null *****


***** Warning: targetArgSpecs=null *****

% Time to collect constants: 40 milliseconds
% Time to collect examples: 2 milliseconds

% ***** Severe Warning: Have ZERO negative examples!  Variable 'minNumberOfNegExamples' is currently set to 10. *****


% Read 0 pos examples and 0 neg examples.
% Time to init learnOneClause: 55 milliseconds
% Old dirDatasets/IMDB/WILL_model/

% Have 0 'raw' positive examples and kept 0.
% Have 0 'raw' negative examples and kept 0.
% No pos ex for workedunder
% No neg ex for workedunder

% NEW target:                 workedunder(D, E)
%  targetPredicateSignatures: [const, const]
%  targetPred:                workedunder/2
%  targetArgTypes:            signature = [const, const], types = [+person, -person]
%  targets:                   [workedunder(D, E)]
%  targetPredicates:          [workedunder/2]
%  targetArgSpecs:            [[D[+person], E[-person]]]
%  variablesInTargets:        [[D, E]]
Creating neg ex for: workedunder
%   Have considered 1,000 possible negative examples for null.null.
%   Have randomly created 1,000 putative negative examples.
%   Have considered 2,000 possible negative examples for null.null.
%   Have randomly created 2,000 putative negative examples.
%   Have considered 3,000 possible negative examples for null.null.
%   Have randomly created 3,000 putative negative examples.
%   Have considered 4,000 possible negative examples for null.null.
%   Have randomly created 4,000 putative negative examples.
%   Have considered 5,000 possible negative examples for null.null.
%   Have randomly created 5,000 putative negative examples.
%   Have considered 6,000 possible negative examples for null.null.
%   Have randomly created 6,000 putative negative examples.
%   Have considered 7,000 possible negative examples for null.null.
%   Have randomly created 7,000 putative negative examples.
%   Have considered 8,000 possible negative examples for null.null.
%   Have randomly created 8,000 putative negative examples.
%   Have considered 9,000 possible negative examples for null.null.
%   Have randomly created 9,000 putative negative examples.
%   Have considered 10,000 possible negative examples for null.null.
%   Have randomly created 10,000 putative negative examples.
%   Have considered 11,000 possible negative examples for null.null.
%   Have randomly created 11,000 putative negative examples.
%   Have considered 12,000 possible negative examples for null.null.
%   Have randomly created 12,000 putative negative examples.
%   Have considered 13,000 possible negative examples for null.null.
%   Have randomly created 13,000 putative negative examples.
%   Have considered 14,000 possible negative examples for null.null.
%   Have randomly created 14,000 putative negative examples.
%   Have considered 15,000 possible negative examples for null.null.
%   Have randomly created 15,000 putative negative examples.
%   Have considered 16,000 possible negative examples for null.null.
%   Have randomly created 16,000 putative negative examples.
%   Have considered 17,000 possible negative examples for null.null.
%   Have randomly created 17,000 putative negative examples.
%   Have considered 18,000 possible negative examples for null.null.
%   Have randomly created 18,000 putative negative examples.
%   Have considered 19,000 possible negative examples for null.null.
%   Have randomly created 19,000 putative negative examples.
%   Have considered 20,000 possible negative examples for null.null.
%   Have randomly created 20,000 putative negative examples.
%   Have considered 21,000 possible negative examples for null.null.
%   Have randomly created 21,000 putative negative examples.
%   Have considered 22,000 possible negative examples for null.null.
%   Have randomly created 22,000 putative negative examples.
%   Have considered 23,000 possible negative examples for null.null.
%   Have randomly created 23,000 putative negative examples.
%   Have considered 24,000 possible negative examples for null.null.
%   Have randomly created 24,000 putative negative examples.
%   Have considered 25,000 possible negative examples for null.null.
%   Have randomly created 25,000 putative negative examples.
%   Have considered 26,000 possible negative examples for null.null.
%   Have randomly created 26,000 putative negative examples.
%   Have considered 27,000 possible negative examples for null.null.
%   Have randomly created 27,000 putative negative examples.
%   Have considered 28,000 possible negative examples for null.null.
%   Have randomly created 28,000 putative negative examples.
%   Have considered 29,000 possible negative examples for null.null.
%   Have randomly created 29,000 putative negative examples.
%   Have considered 30,000 possible negative examples for null.null.
%   Have randomly created 30,000 putative negative examples.
%   Have considered 31,000 possible negative examples for null.null.
%   Have randomly created 31,000 putative negative examples.
%   Have considered 32,000 possible negative examples for null.null.
%   Have randomly created 32,000 putative negative examples.
%   Have considered 33,000 possible negative examples for null.null.
%   Have randomly created 33,000 putative negative examples.
%   Have considered 34,000 possible negative examples for null.null.
%   Have randomly created 34,000 putative negative examples.
%   Have considered 35,000 possible negative examples for null.null.
%   Have randomly created 35,000 putative negative examples.
%   Have considered 36,000 possible negative examples for null.null.
%   Have randomly created 36,000 putative negative examples.
%   Have considered 37,000 possible negative examples for null.null.
%   Have randomly created 37,000 putative negative examples.
%   Have considered 38,000 possible negative examples for null.null.
%   Have randomly created 38,000 putative negative examples.
%   Have considered 39,000 possible negative examples for null.null.
%   Have randomly created 39,000 putative negative examples.
%   Have considered 40,000 possible negative examples for null.null.
%   Have randomly created 40,000 putative negative examples.
%   Have considered 41,000 possible negative examples for null.null.
%   Have randomly created 41,000 putative negative examples.
%   Have considered 42,000 possible negative examples for null.null.
%   Have randomly created 42,000 putative negative examples.
%   Have considered 43,000 possible negative examples for null.null.
%   Have randomly created 43,000 putative negative examples.
%   Have considered 44,000 possible negative examples for null.null.

% Target variant already exists.  Skipping target:                 workedunder(F, G).
%  examplePredicateSignatures: [const, const]
%  targetArgTypes:            signature = [const, const], types = [+person, -person]
%  targetArgSpecs:            [[D[+person], E[-person]]]

% processing backup's for workedunder
%  POS EX = 326
%  NEG EX = 43,774

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 1
%  |addedToFactBase|   = 0
Datasets/IMDB/WILL_model/
File: Datasets\IMDB\train1/advice.txt doesnt exist.Hence no advice loaded
% Learning 20 trees in this iteration for workedunder

% Learn model for: workedunder
% Kept 326 of the 326 positive examples.
% Kept 43,774 of the 43,774 negative examples.
% Dataset size: 44,100
Computing probabilities
prob time:70 milliseconds
Time to build dataset: 100 milliseconds
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.
% Have selected pos example #33,286 as the next seed: workedunder(azensmichael, adenisarndt)
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (2):
%    workedunder(+person, -person),
%    workedunder(-person, +person)
%  Modes (43):
%    actor(+person),
%    movie(+movie, -person),
%    movie(-movie, +person),
%    female_gender(+person),
%    genre(+person, #genre),
%    genre(+person, -genre),
%    genre(-person, +genre),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = workedunder(D, E)
% Unacceptable due to maxPrecision: 0.9999977324314457 vs 0.995   workedunder(_, _).  [covers 44,100.0/44,100.0 pos, 0.0/0.0 neg]
% Most-general root: workedunder(_, _).  [covers 44,100.0/44,100.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 44,100.0/44,100.0 pos, 0.0/0.0 neg]' score=-Infinity

% |allArgPossibilities| = 2 |children| = 0    Was last here 0 seconds ago.
%    actor/1 [+person]
%    |allArgPossibilities2| = 2
% [ LazyGroundClauseIndex ]  Building full index for actor/1 with 181 assertions.

% |allArgPossibilities| = 2 |children| = 2    Was last here 3 milliseconds ago.
%    movie/2 [-movie, +person]
%    |allArgPossibilities2| = 2
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for movie/2.

% |allArgPossibilities| = 2 |children| = 4    Was last here 1 milliseconds ago.
%    female_gender/1 [+person]
%    |allArgPossibilities2| = 2
% [ LazyGroundClauseIndex ]  Building full index for female_gender/1 with 69 assertions.

% |allArgPossibilities| = 2 |children| = 6    Was last here 1 milliseconds ago.
%    genre/2 [+person, #genre]
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for genre/2.
%    |allArgPossibilities2| = 1
% [ LazyGroundClauseIndex ]  Building full index for genre/2 with 36 assertions.

% |allArgPossibilities| = 2 |children| = 7    Was last here 551 milliseconds ago.
%    genre/2 [+person, -genre]
%    |allArgPossibilities2| = 2
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants.
% Gleaner: New best node found (score = -1,120.881161): workedunder(A, _) :- actor(A).  [covers 38,010.0/44,100.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,120.881161): workedunder(_, A) :- actor(A).  [covers 38,010.0/44,100.0 pos, 0.0/0.0 neg]
% Unacceptable due to maxPrecision: 0.9999977324314457 vs 0.995   workedunder(A, _) :- movie(_, A).  [covers 44,100.0/44,100.0 pos, 0.0/0.0 neg]
% Unacceptable due to maxPrecision: 0.9999977324314457 vs 0.995   workedunder(_, A) :- movie(_, A).  [covers 44,100.0/44,100.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,120.881161): workedunder(A, _) :- female_gender(A).  [covers 14,490.0/44,100.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female_gender(A).  [covers 14,490.0/44,100.0 pos, 0.0/0.0 neg]' score=-1120.881161135733

% |allArgPossibilities| = 2 |children| = 0    Was last here 2 seconds ago.
%    actor/1 [+person]
%    |allArgPossibilities2| = 2

% |allArgPossibilities| = 2 |children| = 2    Was last here 0 seconds ago.
%    movie/2 [-movie, +person]
%    |allArgPossibilities2| = 2

% |allArgPossibilities| = 2 |children| = 4    Was last here 0 seconds ago.
%    female_gender/1 [+person]
%    |allArgPossibilities2| = 2

% |allArgPossibilities| = 2 |children| = 5    Was last here 132 milliseconds ago.
%    genre/2 [+person, #genre]
%    |allArgPossibilities2| = 0

% |allArgPossibilities| = 2 |children| = 5    Was last here 170 milliseconds ago.
%    genre/2 [+person, -genre]
%    |allArgPossibilities2| = 2
%  At # nodes expanded = 2, |OPEN| = 8.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants.
